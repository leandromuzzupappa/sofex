// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectsProjectIdProjectNameIndexImport } from './routes/projects/$projectId/$projectName/index'

// Create Virtual Routes

const TerminosYCondicionesLazyImport = createFileRoute(
  '/terminos-y-condiciones',
)()
const PlaygroundLazyImport = createFileRoute('/playground')()
const LegalsLazyImport = createFileRoute('/legals')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TerminosYCondicionesLazyRoute = TerminosYCondicionesLazyImport.update({
  path: '/terminos-y-condiciones',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/terminos-y-condiciones.lazy').then((d) => d.Route),
)

const PlaygroundLazyRoute = PlaygroundLazyImport.update({
  path: '/playground',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/playground.lazy').then((d) => d.Route))

const LegalsLazyRoute = LegalsLazyImport.update({
  path: '/legals',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/legals.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProjectsProjectIdProjectNameIndexRoute =
  ProjectsProjectIdProjectNameIndexImport.update({
    path: '/projects/$projectId/$projectName/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/legals': {
      preLoaderRoute: typeof LegalsLazyImport
      parentRoute: typeof rootRoute
    }
    '/playground': {
      preLoaderRoute: typeof PlaygroundLazyImport
      parentRoute: typeof rootRoute
    }
    '/terminos-y-condiciones': {
      preLoaderRoute: typeof TerminosYCondicionesLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId/$projectName/': {
      preLoaderRoute: typeof ProjectsProjectIdProjectNameIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  LegalsLazyRoute,
  PlaygroundLazyRoute,
  TerminosYCondicionesLazyRoute,
  ProjectsProjectIdProjectNameIndexRoute,
])
